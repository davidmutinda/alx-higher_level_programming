The ``Matrix Divided`` module
============================

Using ``matrix_divided``
---------------------

First ``matrix_divided`` from the ``Matrix Divided`` module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:
    >>> matrix_divided([[1,2,3], [3,4]], 2)
    Traceback (most recent call last):
        ---
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided([[1,2,3], [3,4,5]], 2)
    [[0.5, 1.0, 1.5], [1.5, 2.0, 2.5]]

    >>> matrix_divided([[1,2,3], [3,4,5]], 0)
    Traceback (most recent call last):
        ---
    ZeroDivisionError: division by zero

    >>> matrix_divided([[1,2,3], [3,4,5]], "6")
    Traceback (most recent call last):
        ---
    TypeError: div must be a number

    >>> matrix_divided([8], 6)
    Traceback (most recent call last):
        ---
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([], 6)
    Traceback (most recent call last):
        ---
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([1,2,3], 6)
    Traceback (most recent call last):
        ---
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1,"f",3], [3,4,5]], 2)
    Traceback (most recent call last):
        ---
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1,2.7,3], [3,4,5.5]], 5)
    [[0.2, 0.54, 0.6], [0.6, 0.8, 1.1]]

    >>> matrix_divided()
    Traceback (most recent call last):
        ---
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

    >>> matrix_divided([])
    Traceback (most recent call last):
        ---
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    >>> matrix_divided([[1,2,3], [3,4,5]], float('inf'))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

    >>> matrix_divided([[1,2,3], [3,4,5]], float('-inf'))
    [[-0.0, -0.0, -0.0], [-0.0, -0.0, -0.0]]
